#include <iostream>
#include <vector>
#include <string>
#include <ctime>

using namespace std;

// Structure to represent a post
struct Post {
    string username;
    string content;
    string timestamp;
};

// Structure to represent a user
struct User {
    string username;
    string password;
};

class SocialMediaPlatform {
private:
    vector<User> users;
    vector<Post> timeline;

    // Function to find a user by username
    User* findUser(const string& username) {
        for (User& user : users) {
            if (user.username == username) {
                return &user;
            }
        }
        return nullptr;
    }

public:
    // Function to register a new user
    void registerUser(const string& username, const string& password) {
        User newUser;
        newUser.username = username;
        newUser.password = password;
        users.push_back(newUser);
        cout << "User registered successfully!" << endl;
    }

    // Function to authenticate a user
    bool authenticateUser(const string& username, const string& password) {
        User* user = findUser(username);
        if (user && user->password == password) {
            cout << "User authenticated successfully!" << endl;
            return true;
        } else {
            cout << "Authentication failed. Invalid username or password." << endl;
            return false;
        }
    }

    // Function to add a new post
    void addPost(const string& username, const string& content) {
        Post newPost;
        newPost.username = username;
        newPost.content = content;

        // Get current time
        time_t now = time(0);
        tm *ltm = localtime(&now);
        newPost.timestamp = to_string(1900 + ltm->tm_year) + "-" +
                            to_string(1 + ltm->tm_mon) + "-" +
                            to_string(ltm->tm_mday) + " " +
                            to_string(ltm->tm_hour) + ":" +
                            to_string(ltm->tm_min) + ":" +
                            to_string(ltm->tm_sec);

        // Add the post to the timeline
        timeline.push_back(newPost);
        cout << "Post added successfully!" << endl;
    }

    // Function to display the timeline
    void displayTimeline() {
        cout << "------ Timeline ------" << endl;
        for (const Post& post : timeline) {
            cout << post.username << " (" << post.timestamp << "):" << endl;
            cout << post.content << endl << endl;
        }
    }
};

int main() {
    SocialMediaPlatform platform;
    char choice;

    do {
        cout << "1. Register" << endl;
        cout << "2. Login" << endl;
        cout << "3. Add a new post" << endl;
        cout << "4. Display timeline" << endl;
        cout << "5. Exit" << endl;
        cout << "Enter your choice: ";
        cin >> choice;
        cin.ignore();

        switch (choice) {
            case '1': {
                string username, password;
                cout << "Enter username: ";
                getline(cin, username);
                cout << "Enter password: ";
                getline(cin, password);
                platform.registerUser(username, password);
                break;
            }
            case '2': {
                string username, password;
                cout << "Enter username: ";
                getline(cin, username);
                cout << "Enter password: ";
                getline(cin, password);
                if (platform.authenticateUser(username, password)) {
                    // Do something after successful login
                }
                break;
            }
            case '3': {
                string content;
                cout << "Enter post content: ";
                getline(cin, content);
                platform.addPost("Current User", content);
                break;
            }
            case '4':
                platform.displayTimeline();
                break;
            case '5':
                cout << "Exiting..." << endl;
                break;
            default:
                cout << "Invalid choice. Please try again." << endl;
        }
    } while (choice != '5');

    return 0;
}
