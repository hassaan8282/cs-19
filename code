#include <iostream>
#include <vector>
#include <string>
#include <ctime>

using namespace std;

// Structure to represent a post
struct Post {
    string username;
    string content;
    string timestamp;
};

// Function to add a new post
void addPost(vector<Post>& timeline) {
    Post newPost;
    cout << "Enter your username: ";
    getline(cin, newPost.username);
    cout << "Enter your post content: ";
    getline(cin, newPost.content);

    // Get current time
    time_t now = time(0);
    tm *ltm = localtime(&now);
    newPost.timestamp = to_string(1900 + ltm->tm_year) + "-" +
                        to_string(1 + ltm->tm_mon) + "-" +
                        to_string(ltm->tm_mday) + " " +
                        to_string(ltm->tm_hour) + ":" +
                        to_string(ltm->tm_min) + ":" +
                        to_string(ltm->tm_sec);

    // Add the post to the timeline
    timeline.push_back(newPost);
}

// Function to display the timeline
void displayTimeline(const vector<Post>& timeline) {
    cout << "------ Timeline ------" << endl;
    for (const Post& post : timeline) {
        cout << post.username << " (" << post.timestamp << "):" << endl;
        cout << post.content << endl << endl;
    }
}

int main() {
    vector<Post> timeline;

    char choice;
    do {
        cout << "1. Add a new post" << endl;
        cout << "2. Display timeline" << endl;
        cout << "3. Exit" << endl;
        cout << "Enter your choice: ";
        cin >> choice;
        cin.ignore();

        switch (choice) {
            case '1':
                addPost(timeline);
                break;
            case '2':
                displayTimeline(timeline);
                break;
            case '3':
                cout << "Exiting..." << endl;
                break;
            default:
                cout << "Invalid choice. Please try again." << endl;
        }
    } while (choice != '3');

    return 0;
}
